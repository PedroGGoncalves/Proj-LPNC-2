10- Reordenar os eventos para que o roteiro ocupe menos dias; Dica: não é obrigatório provar que a função é otimizada. ** (Pendente)

Para entregar: 3 artefatos: 
1) código fonte em Prolog; **
2) arquivo de inserção de eventos de exemplo em Prolog. ** 
3) manual de como escrever ** (arquivo de inserção de eventos), (como mostrar eventos), (como mostrar eventos e calendário.)

/////////
1- Roteiro (roteiro com vários eventos e suas datas) ** (Ok)
2- Evento (para inserir no roteiro, sem data, apenas duração) ** (Ok)
3- Data (com hora e dia. sem minutos, sem segundos.) **(Ok)
4- Calendario (Ok)
5- Mostrar o calendário de Fevereiro de 2022 sem eventos na tela. (Requisito 3) ** (Ok)  
6- Verificar entrada de datas inválidas de acordo com suas regras de limites de hora, dia e mês. ** (Ok) Obs: programa retorna false e não continua execução nesses casos
7- Implemente adição de eventos pelo console. ** (Ok)
8- Implemente o requisito 3 para escrever em arquivo. ** (Ok)
9- #### ** 
O operador informa:
    Primeiro dia do roteiro para alocar eventos (inclusivo);
    Último dia do roteiro para alocar eventos (inclusivo);
    Primeira hora de cada dia válida para o primeiro evento do dia (inclusiva);
    Hora de término das atividades para cada dia (exclusiva);
#### (Ok)
11-Exibir o roteiro em formato de lista. ** (Ok)
12-Exibir o roteiro como um calendário mensal na tela. Implemente dias da semana. ** (Ok)
13-Escreva documentação (como comentário) para todas as regras. ** (Ok)
14-Implemente o requisito 2 para escrever em arquivo. ** (Ok?)
15-Implemente remoção de eventos pelo console. ** (Ok)
